/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Signature, SignatureInterface } from "../Signature";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ethSignedMessageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "recoverSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109d1806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806397aba7f914610051578063cffc18eb14610081578063d2b0737b146100b1578063fa540801146100e1575b600080fd5b61006b60048036038101906100669190610485565b610111565b6040516100789190610522565b60405180910390f35b61009b600480360381019061009691906105ff565b610180565b6040516100a891906106b4565b60405180910390f35b6100cb60048036038101906100c691906106cf565b610227565b6040516100d89190610731565b60405180910390f35b6100fb60048036038101906100f6919061074c565b61025d565b6040516101089190610731565b60405180910390f35b6000806000806101208561028d565b925092509250600186828585604051600081526020016040526040516101499493929190610795565b6020604051602081039080840390855afa15801561016b573d6000803e3d6000fd5b50505060206040510351935050505092915050565b60008061018e878787610227565b9050600061019b8261025d565b90508873ffffffffffffffffffffffffffffffffffffffff166102028287878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610111565b73ffffffffffffffffffffffffffffffffffffffff1614925050509695505050505050565b600083838360405160200161023e93929190610843565b6040516020818303038152906040528051906020012090509392505050565b60008160405160200161027091906108f8565b604051602081830303815290604052805190602001209050919050565b600080600060418451146102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd9061097b565b60405180910390fd5b6020840151925060408401519150606084015160001a90509193909250565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61031c81610309565b811461032757600080fd5b50565b60008135905061033981610313565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61039282610349565b810181811067ffffffffffffffff821117156103b1576103b061035a565b5b80604052505050565b60006103c46102f5565b90506103d08282610389565b919050565b600067ffffffffffffffff8211156103f0576103ef61035a565b5b6103f982610349565b9050602081019050919050565b82818337600083830152505050565b6000610428610423846103d5565b6103ba565b90508281526020810184848401111561044457610443610344565b5b61044f848285610406565b509392505050565b600082601f83011261046c5761046b61033f565b5b813561047c848260208601610415565b91505092915050565b6000806040838503121561049c5761049b6102ff565b5b60006104aa8582860161032a565b925050602083013567ffffffffffffffff8111156104cb576104ca610304565b5b6104d785828601610457565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061050c826104e1565b9050919050565b61051c81610501565b82525050565b60006020820190506105376000830184610513565b92915050565b61054681610501565b811461055157600080fd5b50565b6000813590506105638161053d565b92915050565b6000819050919050565b61057c81610569565b811461058757600080fd5b50565b60008135905061059981610573565b92915050565b600080fd5b600080fd5b60008083601f8401126105bf576105be61033f565b5b8235905067ffffffffffffffff8111156105dc576105db61059f565b5b6020830191508360018202830111156105f8576105f76105a4565b5b9250929050565b60008060008060008060a0878903121561061c5761061b6102ff565b5b600061062a89828a01610554565b965050602061063b89828a01610554565b955050604061064c89828a0161058a565b945050606061065d89828a0161058a565b935050608087013567ffffffffffffffff81111561067e5761067d610304565b5b61068a89828a016105a9565b92509250509295509295509295565b60008115159050919050565b6106ae81610699565b82525050565b60006020820190506106c960008301846106a5565b92915050565b6000806000606084860312156106e8576106e76102ff565b5b60006106f686828701610554565b93505060206107078682870161058a565b92505060406107188682870161058a565b9150509250925092565b61072b81610309565b82525050565b60006020820190506107466000830184610722565b92915050565b600060208284031215610762576107616102ff565b5b60006107708482850161032a565b91505092915050565b600060ff82169050919050565b61078f81610779565b82525050565b60006080820190506107aa6000830187610722565b6107b76020830186610786565b6107c46040830185610722565b6107d16060830184610722565b95945050505050565b60008160601b9050919050565b60006107f2826107da565b9050919050565b6000610804826107e7565b9050919050565b61081c61081782610501565b6107f9565b82525050565b6000819050919050565b61083d61083882610569565b610822565b82525050565b600061084f828661080b565b60148201915061085f828561082c565b60208201915061086f828461082c565b602082019150819050949350505050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b60006108c1601c83610880565b91506108cc8261088b565b601c82019050919050565b6000819050919050565b6108f26108ed82610309565b6108d7565b82525050565b6000610903826108b4565b915061090f82846108e1565b60208201915081905092915050565b600082825260208201905092915050565b7f496e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b600061096560188361091e565b91506109708261092f565b602082019050919050565b6000602082019050818103600083015261099481610958565b905091905056fea26469706673582212208e5c84b2c22f6755e878db6190ca9dbb6ac5e49000ce9c67232e3182300c9db064736f6c634300080b0033";

export class Signature__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Signature> {
    return super.deploy(overrides || {}) as Promise<Signature>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Signature {
    return super.attach(address) as Signature;
  }
  connect(signer: Signer): Signature__factory {
    return super.connect(signer) as Signature__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureInterface {
    return new utils.Interface(_abi) as SignatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Signature {
    return new Contract(address, _abi, signerOrProvider) as Signature;
  }
}
